using C1.Win.C1FlexGrid;
using ComLib;
using ComLib.clsMgr;
using static ComLib.clsUtil;
using System.Collections.Specialized;
using SystemControlClassLibrary.Popup;
using System;
using System.Data;
using System.Data.OracleClient;
using System.Diagnostics;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.Collections.Generic;

namespace SystemControlClassLibrary
{
    
    public partial class PRIIRslt : Form
    {
        #region 변수 설정
        clsCom ck = new clsCom();
        ConnectDB cd = new ConnectDB();
        VbFunc vf = new VbFunc();

        DataTable olddt;
        DataTable moddt;
        DataTable logdt;
        bool _first = true;

        private static int oldValue = 0;
        private int selectedrow = 0;
        private static string cd_id = "";
        private static string cd_nm = "";
        private static string cd_id2 = "";
        private static string cd_nm2 = "";
        private static string cd_id3 = "";
        private static string cd_nm3 = "";
        private static string gangjung_id = "";

        private static string txtheat = "";
        private static string txtpoc = "";
        private static string txtitem_size = "";
        private static string txtsteel = "";
        private static string txtsteel_nm = "";

        private static DateTime start_date;
        private static DateTime end_date;

        clsStyle cs = new clsStyle();

        // 셀의 수정전 값
        private static string strBefValue = "";
        // 셀별 수정 정보(이전/이후)
        private static string[][] strModi = new string[0][];

        private string selected_grp_id = "";
        
        private static string ownerNM = "";
        private static string titleNM = "";
        #endregion 변수 설정

        #region 로딩, 생성자 설정
        public PRIIRslt(string titleNm, string scrAuth, string factCode, string ownerNm)
        {
            ownerNM = ownerNm;
            titleNM = titleNm;
            InitializeComponent();

            Load += PRIIRslt_Load;

            btnDisplay.Click += Button_Click;
            btnExcel.Click += Button_Click;

            grdMain.RowColChange += GrdMain_RowColChange;

            cboLine_GP.SelectedIndexChanged += CboLine_GP_SelectedIndexChanged;
            cbo_Work_Type.SelectedIndexChanged += cbo_Work_Type_SelectedIndexChanged;

            btnSteel.Click += btnSteel_Click;
        }

        ~PRIIRslt()
        {

        }

        private void PRIIRslt_Load(object sender, System.EventArgs e)
        {
            InitControl();

            SetComboBox1();
            SetComboBox2();
            SetComboBox3();

            Button_Click(btnDisplay, null);

            EventCreate();      //사용자정의 이벤트
        }
        #endregion 로딩, 생성자 설정

        #region InitControl 설정
        private void InitControl()
        {
            clsStyle.Style.InitPicture(pictureBox1);

            clsStyle.Style.InitTitle(title_lb, ownerNM, titleNM);

            clsStyle.Style.InitPanel(panel1);

            //Label
            clsStyle.Style.InitLabel(label1);
            clsStyle.Style.InitLabel(label2);
            clsStyle.Style.InitLabel(label3);
            clsStyle.Style.InitLabel(label4);
            clsStyle.Style.InitLabel(label5);
            clsStyle.Style.InitLabel(label6);
            clsStyle.Style.InitLabel(label7);
            clsStyle.Style.InitLabel(label8);
            clsStyle.Style.InitLabel(lblTEAM);

            //Combo
            clsStyle.Style.InitCombo(cboLine_GP, StringAlignment.Near);
            clsStyle.Style.InitCombo(cbo_Work_Type, StringAlignment.Near);
            clsStyle.Style.InitCombo(cboTEAM, StringAlignment.Near);

            //Text
            clsStyle.Style.InitTextBox(txtPOC1);
            clsStyle.Style.InitTextBox(txtHEAT1);
            clsStyle.Style.InitTextBox(txtItemSize);
            clsStyle.Style.InitTextBox(gangjong_id_tb);
            clsStyle.Style.InitTextBox(gangjong_Nm_tb);
            
            // Button Color Set
            clsStyle.Style.InitButton(btnExcel);
            clsStyle.Style.InitButton(btnDisplay);
            clsStyle.Style.InitButton(btnClose);

            //시간 데이터 default 값 적용 
            start_dt.Value = DateTime.Now;
            end_dt.Value = DateTime.Now;

            InitGrd_Main();
        }
        #endregion InitControl 설정

        #region Init Grid 설정
        private void InitGrd_Main()
        {
            grdMain.AutoClipboard = true;
            clsStyle.Style.InitGrid_search(grdMain);

            grdMain.AutoResize = true;

            grdMain.Cols["L_NO"].Caption = "NO";
            grdMain.Cols["MILL_NO"].Caption = "압연번들번호";
            grdMain.Cols["MFG_DATE"].Caption = "작업일자";
            grdMain.Cols["WORK_TYPE"].Caption = "근 ";
            grdMain.Cols["WORK_TYPE_NM"].Caption = "근";
            grdMain.Cols["WORK_TEAM"].Caption = "조";
            grdMain.Cols["WORK_TEAM_NM"].Caption = "조";
            grdMain.Cols["POC_NO"].Caption = "POC";
            grdMain.Cols["HEAT"].Caption = "HEAT";
            grdMain.Cols["STEEL"].Caption = "강종";
            grdMain.Cols["STEEL_NM"].Caption = "강종명";
            grdMain.Cols["ITEM"].Caption = "품목";
            grdMain.Cols["ITEM_SIZE"].Caption = "규격";
            grdMain.Cols["LENGTH"].Caption = "길이";
            grdMain.Cols["INSP_PCS"].Caption = "검사본수";
            grdMain.Cols["GOOD_PCS"].Caption = "합격본수";
            grdMain.Cols["PRII_NG_PCS"].Caption = "NG본수";

            grdMain.Cols["L_NO"].AllowSorting = false;
            grdMain.Cols["MILL_NO"].AllowSorting = false;
            grdMain.Cols["MFG_DATE"].AllowSorting = false;
            grdMain.Cols["WORK_TYPE"].AllowSorting = false;
            grdMain.Cols["WORK_TYPE_NM"].AllowSorting = false;
            grdMain.Cols["WORK_TEAM"].AllowSorting = false;
            grdMain.Cols["WORK_TEAM_NM"].AllowSorting = false;
            grdMain.Cols["POC_NO"].AllowSorting = false;
            grdMain.Cols["HEAT"].AllowSorting = false;
            grdMain.Cols["STEEL"].AllowSorting = false;
            grdMain.Cols["STEEL_NM"].AllowSorting = false;
            grdMain.Cols["ITEM"].AllowSorting = false;
            grdMain.Cols["ITEM_SIZE"].AllowSorting = false;
            grdMain.Cols["LENGTH"].AllowSorting = false;
            grdMain.Cols["INSP_PCS"].AllowSorting = false;
            grdMain.Cols["GOOD_PCS"].AllowSorting = false;
            grdMain.Cols["PRII_NG_PCS"].AllowSorting = false;

            grdMain.Cols["L_NO"].AllowEditing = false;
            grdMain.Cols["MILL_NO"].AllowEditing = false;
            grdMain.Cols["MFG_DATE"].AllowEditing = false;
            grdMain.Cols["WORK_TYPE"].AllowEditing = false;
            grdMain.Cols["WORK_TYPE_NM"].AllowEditing = false;
            grdMain.Cols["WORK_TEAM"].AllowEditing = false;
            grdMain.Cols["WORK_TEAM_NM"].AllowEditing = false;
            grdMain.Cols["POC_NO"].AllowEditing = false;
            grdMain.Cols["HEAT"].AllowEditing = false;
            grdMain.Cols["STEEL"].AllowEditing = false;
            grdMain.Cols["STEEL_NM"].AllowEditing = false;
            grdMain.Cols["ITEM"].AllowEditing = false;
            grdMain.Cols["ITEM_SIZE"].AllowEditing = false;
            grdMain.Cols["LENGTH"].AllowEditing = false;
            grdMain.Cols["INSP_PCS"].AllowEditing = false;
            grdMain.Cols["GOOD_PCS"].AllowEditing = false;
            grdMain.Cols["PRII_NG_PCS"].AllowEditing = false;

            grdMain.Rows[0].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;

            grdMain.Cols["L_NO"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["MILL_NO"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["MFG_DATE"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["WORK_TYPE"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["WORK_TYPE_NM"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["WORK_TEAM"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["WORK_TEAM_NM"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["POC_NO"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["HEAT"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["STEEL"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["STEEL_NM"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["ITEM"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["ITEM_SIZE"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["LENGTH"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter;
            grdMain.Cols["INSP_PCS"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.RightCenter;
            grdMain.Cols["GOOD_PCS"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.RightCenter;
            grdMain.Cols["PRII_NG_PCS"].TextAlign = C1.Win.C1FlexGrid.TextAlignEnum.RightCenter;

            grdMain.Cols["L_NO"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["MILL_NO"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["MFG_DATE"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["WORK_TYPE"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["WORK_TYPE_NM"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["WORK_TEAM"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["WORK_TEAM_NM"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["POC_NO"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["HEAT"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["STEEL"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["STEEL_NM"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["ITEM"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["ITEM_SIZE"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["LENGTH"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["INSP_PCS"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["GOOD_PCS"].TextAlignFixed = TextAlignEnum.CenterCenter;
            grdMain.Cols["PRII_NG_PCS"].TextAlignFixed = TextAlignEnum.CenterCenter;

            grdMain.Cols["L_NO"].Width = 50;
            grdMain.Cols["MILL_NO"].Width = 110;
            grdMain.Cols["MFG_DATE"].Width = 120;
            grdMain.Cols["WORK_TYPE"].Width = 0;
            grdMain.Cols["WORK_TYPE_NM"].Width = 50;
            grdMain.Cols["WORK_TEAM"].Width = 0;
            grdMain.Cols["WORK_TEAM_NM"].Width = 50;
            grdMain.Cols["POC_NO"].Width = 90;
            grdMain.Cols["HEAT"].Width = 90;
            grdMain.Cols["STEEL"].Width = 50;
            grdMain.Cols["STEEL_NM"].Width = 90;
            grdMain.Cols["ITEM"].Width = 50;
            grdMain.Cols["ITEM_SIZE"].Width = 70;
            grdMain.Cols["LENGTH"].Width = 70;
            grdMain.Cols["INSP_PCS"].Width = 100;
            grdMain.Cols["GOOD_PCS"].Width = 100;
            grdMain.Cols["PRII_NG_PCS"].Width = 100;
        }
        #endregion Init Grid 설정

        #region SetDataBinding 설정
        private bool SetDataBinding()
        {
            try
            {
                string start_date = start_dt.Value.ToString();
                start_date = (start_date.Substring(0, 4) + start_date.Substring(5, 2) + start_date.Substring(8, 2));
                string end_date = end_dt.Value.ToString();
                end_date = (end_date.Substring(0, 4) + end_date.Substring(5, 2) + end_date.Substring(8, 2));

                string test = "";

                string sql1 = ("SELECT  ROWNUM AS L_NO ");
                sql1 += string.Format("       ,MILL_NO ");
                sql1 += string.Format("       ,MFG_DATE ");
                sql1 += string.Format("       ,WORK_TYPE ");
                sql1 += string.Format("       ,(SELECT CD_NM FROM TB_CM_COM_CD WHERE CATEGORY = 'WORK_TYPE' AND CD_ID = X.WORK_TYPE) AS WORK_TYPE_NM ");
                sql1 += string.Format("       ,WORK_TEAM ");
                sql1 += string.Format("       ,(SELECT CD_NM FROM TB_CM_COM_CD WHERE CATEGORY = 'WORK_TEAM' AND CD_ID = X.WORK_TEAM) AS WORK_TEAM_NM ");
                sql1 += string.Format("       ,POC_NO ");
                sql1 += string.Format("       ,HEAT ");
                sql1 += string.Format("       ,STEEL ");
                sql1 += string.Format("       ,(SELECT CD_NM FROM TB_CM_COM_CD WHERE CATEGORY = 'STEEL' AND CD_ID = X.STEEL) AS STEEL_NM ");
                sql1 += string.Format("       ,ITEM ");
                sql1 += string.Format("       ,ITEM_SIZE ");
                sql1 += string.Format("       ,LENGTH ");
                sql1 += string.Format("       ,INSP_PCS ");                             // --검사본수
                sql1 += string.Format("       ,INSP_PCS - PRII_NG_PCS AS GOOD_PCS ");   //--합격본수
                sql1 += string.Format("       ,PRII_NG_PCS ");                          //--NG본수
                sql1 += string.Format("FROM   ( ");
                sql1 += string.Format("        SELECT  TO_CHAR(TO_DATE(A.MFG_DATE,'YYYYMMDD'),'YYYY-MM-DD')        AS MFG_DATE ");
                sql1 += string.Format("               ,A.WORK_TYPE      AS WORK_TYPE ");
                sql1 += string.Format("               ,NVL(A.WORK_TEAM,'A') AS WORK_TEAM ");
                sql1 += string.Format("               ,A.POC_NO         AS POC_NO ");
                sql1 += string.Format("               ,A.MILL_NO        AS MILL_NO ");
                sql1 += string.Format("               ,A.HEAT           AS HEAT ");
                sql1 += string.Format("               ,MAX(A.ITEM)      AS ITEM ");
                sql1 += string.Format("               ,MAX(A.ITEM_SIZE) AS ITEM_SIZE ");
                sql1 += string.Format("               ,MAX(A.STEEL)     AS STEEL ");
                sql1 += string.Format("               ,MAX(A.LENGTH)    AS LENGTH ");
                sql1 += string.Format("               ,COUNT(*)         AS INSP_PCS ");
                sql1 += string.Format("               ,SUM(DECODE(A.GOOD_YN,'NG',1,0))  AS PRII_NG_PCS ");
                sql1 += string.Format("        FROM   TB_CR_PIECE_WR A ");
                sql1 += string.Format("        WHERE  A.MFG_DATE   BETWEEN '{0}' AND '{1}' ", start_date, end_date);    //:P_FR_DATE AND :P_TO_DATE
                sql1 += string.Format("        AND    A.LINE_GP    =  '{0}' ", cd_id); //:P_LINE_GP
                sql1 += string.Format("        AND    A.ROUTING_CD = 'D2' ");
                sql1 += string.Format("        AND    A.POC_NO     LIKE '%{0}%' || '%'", txtpoc);    //:P_POC_NO
                sql1 += string.Format("        AND    A.HEAT       LIKE  '%{0}%' || '%'", txtheat);  //:P_HEAT
                sql1 += string.Format("        AND    A.WORK_TYPE  LIKE '{0}' || '%' ", cd_id2);//, cbo_Work_Type.Text);    //:P_WORK_TYPE
                sql1 += string.Format("        AND    NVL(A.WORK_TEAM,'A')  LIKE '{0}' || '%' ", cd_id3);
                sql1 += string.Format("        AND    A.ITEM_SIZE       LIKE '%{0}%' || '%'", txtitem_size);  //:ITEM_SIZE
                sql1 += string.Format("        AND    A.STEEL       LIKE '%{0}%' || '%'", gangjung_id);  //:STEEL
                sql1 += string.Format("        AND    NVL(A.REWORK_YN,'N') = 'N'  ");
                sql1 += string.Format("        GROUP BY A.MFG_DATE ");
                sql1 += string.Format("               ,A.WORK_TYPE  ");
                sql1 += string.Format("               ,A.WORK_TEAM  ");
                sql1 += string.Format("               ,A.POC_NO ");
                sql1 += string.Format("               ,A.MILL_NO ");
                sql1 += string.Format("               ,A.HEAT ");
                sql1 += string.Format("        ORDER BY  1,2,3,4,5  ");
                sql1 += string.Format("        ) X ");

                olddt = cd.FindDataTable(sql1);

                logdt = olddt.Copy();

                moddt = olddt.Copy();

                if (_first)
                {
                    moddt.Clear();
                    _first = false;
                }

                this.Cursor = System.Windows.Forms.Cursors.AppStarting;
                grdMain.SetDataBinding(moddt, null, true);
                this.Cursor = System.Windows.Forms.Cursors.Default;
                grdMain.AutoResize = true;

                clsMsg.Log.Alarm(Alarms.Info, clsMsg.Log.__Function(), clsMsg.Log.__Line(), moddt.Rows.Count.ToString(), "건 조회 되었습니다.");
            }
            catch (Exception ex)
            {
                MessageBox.Show("[" + ex.ToString() + "]");
                return false;
            }
            return true;
        }
        #endregion SetDataBinding 설정

        #region ComboBox 설정
        private void SetComboBox1()
        {
            cd.SetCombo(cboLine_GP, "LINE_GP", "#1라인", false, ck.Line_gp);
        }

        private bool SetComboBox2()
        {
            try
            {
                cbo_Work_Type.Items.Clear();
                DataTable dt2 = cd.Find_CD("WORK_TYPE");
                List<string> list2 = new List<string>();
                list2.Add("전체");

                for (int row = 0; row < dt2.Rows.Count; row++)
                {
                    list2.Add(dt2.Rows[row].ItemArray[1].ToString());
                }
                foreach (var item in list2)
                {
                    cbo_Work_Type.Items.Add(item);
                }
                //첫번째 아이템 선택
                cbo_Work_Type.SelectedIndex = 0;
            }
            catch (Exception ex)
            {
                return false;
            }
            return true;
        }

        private void SetComboBox3()
        {
            cd.SetCombo(cboTEAM, "WORK_TEAM", "", true);
        }
        #endregion ComboBox 설정

        #region Select IndexChanged 이벤트 설정
        private void CboLine_GP_SelectedIndexChanged(object sender, EventArgs e)
        {
            cd_id = ((ComLib.DictionaryList)cboLine_GP.SelectedItem).fnValue;
            ck.Line_gp = cd_id;
        }
        private void cbo_Work_Type_SelectedIndexChanged(object sender, EventArgs e)
        {
            cd_id2 = ((ComLib.DictionaryList)cbo_Work_Type.SelectedItem).fnValue;
        }
        private void cboTEAM_SelectedIndexChanged(object sender, EventArgs e)
        {
            cd_id3 = ((ComLib.DictionaryList)cboTEAM.SelectedItem).fnValue;
        }
        #endregion Select IndexChanged 이벤트 설정

        #region Click 이벤트 설정
        private void btnSteel_Click(object sender, EventArgs e)
        {
            SearchSteelNm popup = new SearchSteelNm();
            popup.Owner = this; //A폼을 지정하게 된다.
            popup.StartPosition = FormStartPosition.CenterScreen;
            popup.ShowDialog();
            if (ck.StrKey1 != "")
            {
                gangjong_id_tb.Text = ck.StrKey1;
                gangjong_Nm_tb.Text = ck.StrKey2;
            }
        }

        private void Button_Click(object sender, EventArgs e)
        {
            switch (((Button)sender).Name)
            {
                case "btnDisplay":
                    setTextValue();
                    SetDataBinding();

                    break;

                case "btnExcel":
                    SaveExcel();
                    break;
            }
        }

        private void btnClose_Click(object sender, EventArgs e)
        {
            this.Close();
        }
        #endregion Click 이벤트 설정
       
        #region 기타 이벤트 설정
        private void datetime_check()
        {
            if (start_dt.Value.ToString() == "")
                start_dt.Value = DateTime.Now;

            if (end_dt.Value.ToString() == "")
                end_dt.Value = DateTime.Now;

            DateTime from = (DateTime)start_dt.Value;
            DateTime to = (DateTime)end_dt.Value;

            if (DateTime.Compare(from, to) > 0)
            {
                start_dt.Value = to.AddDays(-1);
            }
            if (DateTime.Compare(from, to) == 0)
            {
                start_dt.Value = to.AddDays(-1);
            }
        }

        private void GrdMain_RowColChange(object sender, EventArgs e)
        {
            int maxrow = 0;
            int oldSel = 0;
            string str = string.Empty;
            string temp = string.Empty;

            selectedrow = grdMain.RowSel;
        }

        private void SaveExcel()
        {
            vf.SaveExcel(titleNM, grdMain);
        }
        
        public static string __File()
        {
            var st = new StackTrace(new StackFrame(true));
            var sf = st.GetFrame(0);
            return sf.GetFileName();
        }

        private void setTextValue()
        {
            txtheat = txtHEAT1.Text;
            txtpoc = txtPOC1.Text;
            txtitem_size = txtItemSize.Text;
            txtsteel = gangjong_id_tb.Text;
            txtsteel_nm = gangjong_Nm_tb.Text;
        }

        private void gangjong_id_tb_TextChanged(object sender, EventArgs e)
        {
            gangjong_Nm_tb.Text = "";
            gangjung_id = "";
        }

        private void gangjong_id_tb_KeyDown(object sender, KeyEventArgs e)
        {
            //[Enter] Key는 다음 컨트롤로 이동
            if (e.KeyCode == Keys.Enter) SendKeys.Send("{TAB}");
        }

        //사용자이벤트 생성
        private void EventCreate()
        {
            this.gangjong_id_tb.LostFocus += new System.EventHandler(gangjong_id_tb_LostFocus);            //강종ID
        }

        //강종ID(LostFocus)
        private void gangjong_id_tb_LostFocus(object sender, EventArgs e)
        {
            if (gangjong_id_tb.Text == "")
            {
                gangjong_Nm_tb.Text = "";
                gangjung_id = "";
            }
            else
            {
                gangjong_Nm_tb.Text = cd.Find_Steel_NM_By_ID(gangjong_id_tb.Text);

                if (gangjong_Nm_tb.Text.Length == 0)
                {
                    if (MessageBox.Show(" 해당 강종에 따른 강종명을 찾을 수 없습니다.", "", MessageBoxButtons.OK) == DialogResult.OK)
                    {
                        gangjong_Nm_tb.Text = "";
                        gangjong_id_tb.Focus();
                        return;
                    }
                }
                else
                    gangjung_id = gangjong_id_tb.Text;
            }
        }

        private void txtItemSize_KeyPress(object sender, KeyPressEventArgs e)
        {
            vf.KeyPressEvent_number(sender, e);
        }
        #endregion 기타 이벤트 설정
    }
}
