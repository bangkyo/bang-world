using ComLib;
using System;
using System.Text;
using System.Data;
using System.Windows.Forms;
using Microsoft.VisualBasic.FileIO;
using System.Net;
using System.Data.OracleClient;
using System.Drawing;
using System.IO;
using System.Deployment.Application;

namespace RBT_LEVEL2
{
    public partial class LoginForm : Form
    {
        #region 변수선언
        private clsCom ck = new clsCom();
        ConnectDB cd = new ConnectDB();
        private string iniFileFullPath = "C:\\L2\\INI\\" + "UserId.ini";
        private bool bEditChange = false;
        #endregion

        #region 화면
        public LoginForm()
        {
            InitializeComponent();
        }

        Version myVersion;

        private void LoginForm_Load(object sender, System.EventArgs e)
        {

            if (ApplicationDeployment.IsNetworkDeployed)
                myVersion = ApplicationDeployment.CurrentDeployment.CurrentVersion;
            Text = "Version " + myVersion;

            // 초기 메모리 (베이스)
            long mem = GC.GetTotalMemory(false);
            Console.WriteLine("Initial Memory: {0}", mem);

            //if (FileSystem.GetFileInfo(iniFileFullPath).Exists)
            //{
                
            //}

            if (ReadUserIdFile())
                txtLoginID.Text = ck.UserID.Trim();
            else
                txtLoginID.Text = "";

            // 함수 호출후 메모리
            mem = GC.GetTotalMemory(false);
            Console.WriteLine("Current Memory: {0}", mem);

            // 메모리 Clean Up 
            GC.Collect();
            //System.Threading.Thread.Sleep(5000);

            // 메모리 Clean Up 후 
            mem = GC.GetTotalMemory(false);
            Console.WriteLine("After GC Memory: {0}", mem);

            //Console.ReadKey();
        }

        private void LoginForm_Shown(object sender, System.EventArgs e)
        {
            //사용자정의 이벤트
            EventCreate();

            //Caps Lock 키
            if (IsKeyLocked(Keys.CapsLock)) lblCapsLock.Visible = true;
            else lblCapsLock.Visible = false;
        }

        private void LoginForm_KeyDown(object sender, KeyEventArgs e)
        {
            lblCapsLock.Visible = IsKeyLocked(Keys.CapsLock);
        }
        #endregion

        #region KeyDown
        private void TxtLoginID_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter || e.KeyCode == Keys.Tab)
                txtPasswd.Focus();
        }

        private void TxtPasswd_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
                Login();
            //btnLogin.Focus();
        }

        private void btnLogin_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
                Login();
        }
        #endregion

        #region 편집
        private void txtLoginID_TextChanged(object sender, EventArgs e)
        {
            bEditChange = true;
        }
        #endregion

        #region Login 처리
        private void Login()
        {
            if(txtLoginID.Text.Trim() == "")
            {
                MessageBox.Show("아이디를 입력하세요.", "확인");
                txtLoginID.Focus();
                return;
            }

            if(txtPasswd.Text.Trim() == "")
            {
                MessageBox.Show("비밀번호를 입력하세요.", "확인");
                txtPasswd.Focus();
                return;
            }




            string sql = "";
            DataTable dt = new DataTable();

            //사용자성명/권한그룹ID/비밀번호 구하기
            sql = "";
            sql += "SELECT NM, PASSWD, ACL_GRP_ID";
            sql += "  FROM TB_CM_USER";
            sql += " WHERE USER_ID = " + "'" + txtLoginID.Text.Trim() + "'";

            dt = cd.FindDataTable(sql);

            if (dt == null || dt.Rows.Count == 0)
            {
                MessageBox.Show("등록된 사용자가 아닙니다." + "\r\n" + "\r\n" + "아이디를 확인하세요!!", "확인");
                txtLoginID.Focus();
                return;
            }

            if (txtPasswd.Text.Trim() != dt.Rows[0]["PASSWD"].ToString().Trim())
            {
                MessageBox.Show("비밀번호를 확인하세요!!", "확인");
                txtPasswd.Focus();
                return;
            }

            ck.UserID = txtLoginID.Text.Trim();
            ck.UserNm = dt.Rows[0]["NM"].ToString();
            ck.UserGrp = dt.Rows[0]["ACL_GRP_ID"].ToString();

            this.DialogResult = DialogResult.OK;

            // 로그인 이력 기록 
            InsertLogin();

        }
        #endregion

        #region "사용자정의 이벤트"
        //---이벤트 생성
        private void EventCreate()
        {
            this.txtLoginID.GotFocus += txtLoginID_GotFocus;      //아이디(GotFocus)
            this.txtLoginID.LostFocus += txtLoginID_LostFocus;    //아이디(LostFocus)
        }

        private void txtLoginID_GotFocus(object sender, EventArgs e)
        {
            bEditChange = false;
        }

        //아이디 변경 -> UserId.ini파일을 삭제하고, 다시 만든다.
        private void txtLoginID_LostFocus(object sender, EventArgs e)
        {
            if (bEditChange == true)
            {
                if (FileSystem.GetFileInfo(iniFileFullPath).Exists)
                {
                    DeleteUserIdFile();
                    WriteUserIdFile();
                }
                else
                {
                    // 파일 생성후 
                    CreateUserIdFile(iniFileFullPath);
                    WriteUserIdFile();
                }
            }
        }

        private void CreateUserIdFile(string _filefullpath)
        {
            FileInfo fileInfo = new FileInfo(_filefullpath);

            if (!fileInfo.Exists)
                Directory.CreateDirectory(fileInfo.Directory.FullName);

        }
        #endregion

        #region "UserId.ini 파일(로그인ID)"
        /// <summary>
        /// UserId.ini 파일 쓰기
        /// </summary>
        public void WriteUserIdFile()
        {

            if (FileSystem.GetFileInfo(iniFileFullPath).Exists) FileSystem.GetFileInfo(iniFileFullPath).Delete();  //파일 지움

            FileSystem.GetFileInfo(iniFileFullPath).OpenWrite().Close();
            StringBuilder sb = new System.Text.StringBuilder();

            sb.AppendLine("# User Id");
            sb.AppendLine("UserId = " + txtLoginID.Text.Trim());
            sb.AppendLine("");

            FileSystem.WriteAllText(iniFileFullPath, sb.ToString(), true);
        }

        /// <summary>
        /// UserId.ini 파일 읽기
        /// </summary>
        public bool ReadUserIdFile()
        {
            int nIndex = 0;

            if (FileSystem.GetFileInfo(iniFileFullPath).Exists == false) return false;                        //파일이 없음

            string sData = FileSystem.ReadAllText(iniFileFullPath, Encoding.Unicode).Replace("\r\n", ",");    //Enter(\n\r)표시를 콤마(,)로 대체
            string[] arrText = System.Text.RegularExpressions.Regex.Split(sData, ",");

            for (int i = 0; i < arrText.Length; i++)
            {
                if ((arrText[i].Replace(" ", "").Length > 0) && (arrText[i].Replace(" ", "").Substring(0, 1) != "#"))
                {
                    nIndex = arrText[i].Replace(" ", "").IndexOf("=");

                    //# UserId(사용자ID)
                    if (arrText[i].Replace(" ", "").Substring(0, nIndex).ToUpper().Trim().ToString() == "USERID")
                    {
                        nIndex = arrText[i].IndexOf("=");
                        ck.UserID = arrText[i].Substring(nIndex + 1, arrText[i].Length - (nIndex + 1)).Trim().ToString();
                    }
                }
            }

            return true;
        }

        public bool ReadINI()
        {
            int nIndex = 0;

            if (FileSystem.GetFileInfo(iniFileFullPath).Exists == false) return false;



            return true;
        }

        /// <summary>
        /// UserId.ini 파일 삭제
        /// </summary>
        public void DeleteUserIdFile()
        {
            //string sFileName = System.Windows.Forms.Application.StartupPath.ToString() + "\\" + "UserId.ini";

            if (FileSystem.GetFileInfo(iniFileFullPath).Exists) FileSystem.GetFileInfo(iniFileFullPath).Delete();  //파일 지움
        }
        #endregion

        private void btnCancel_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btnLogin_Click(object sender, EventArgs e)
        {
            Login();

            // 작업표시줄을 제외한  작업 사이즈 {Width = 1280 Height = 984} 1280,984
            //Size WorkingArea = Screen.PrimaryScreen.WorkingArea.Size;
            
            //MessageBox.Show(WorkingArea.ToString());
        }

        private void InsertLogin()
        {
            string localComputerName = Dns.GetHostName();

            IPAddress[] localIPs = Dns.GetHostAddresses(localComputerName);

            string ipNum = localIPs[1].ToString();

            // isert login history

            //디비선언
            OracleConnection conn = cd.OConnect();

            OracleCommand cmd = new OracleCommand();
            OracleTransaction transaction = null;

            try
            {

                conn.Open();
                cmd.Connection = conn;
                transaction = conn.BeginTransaction();
                cmd.Transaction = transaction;

                string sql1 = string.Empty;
                sql1  = string.Format(" INSERT INTO TB_CM_LOGINHIS ");
                sql1 += string.Format(" ( ");
                sql1 += string.Format("    LOGIN_DDTT ");
                sql1 += string.Format("   ,USER_ID ");
                sql1 += string.Format("   ,PC_IP ");
                sql1 += string.Format("   ,REGISTER ");
                sql1 += string.Format("   ,REG_DDTT ");
                sql1 += string.Format("   ) ");
                sql1 += string.Format(" VALUES ( ");
                sql1 += string.Format("    sysdate ");
                sql1 += string.Format("   ,'{0}' ", ck.UserID);
                sql1 += string.Format("   ,'{0}' ", ipNum);
                sql1 += string.Format("   ,'{0}' ", ck.UserID);
                sql1 += string.Format("   ,sysdate ");
                sql1 += string.Format("   ) ");

                cmd.CommandText = sql1;
                cmd.ExecuteNonQuery();

                //실행후 성공
                transaction.Commit();

            }
            catch (System.Exception ex)
            {
                //실행후 실패 : 
                if (transaction != null)
                {
                    transaction.Rollback();
                }

                // 추가되었을시에 중복성으로 실패시 메시지 표시
                MessageBox.Show(ex.Message);
            }
            finally
            {
                if (cmd != null)
                    cmd.Dispose();
                if (conn != null)
                    conn.Close();       //데이터베이스연결해제
                if (transaction != null)
                    transaction.Dispose();
            }
        }
    }
}
